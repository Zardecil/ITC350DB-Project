CREATE TABLE USERS (
  Username VARCHAR(50) UNIQUE NOT NULL,
  Password VARCHAR(50) NOT NULL,
  DoB DATE NOT NULL,
  IsAdmin Bool NOT NULL,
  UserID SERIAL PRIMARY KEY
);

CREATE TABLE CLASS (
  ClassName VARCHAR(50) UNIQUE NOT NULL,
  ClassID SERIAL PRIMARY KEY
);

CREATE TABLE RACE (
  RaceName VARCHAR(50) UNIQUE NOT NULL,
  RaceID SERIAL PRIMARY KEY
);

CREATE TABLE BACKGROUND (
  BackgroundName VARCHAR(50) UNIQUE NOT NULL,
  BackgroundID SERIAL PRIMARY KEY
);

CREATE TABLE CHARACTERS (
  FirstName VARCHAR(50) NOT NULL,
  LastName VARCHAR(50),
  CreationDate date NOT NULL,
  Proficiencies VARCHAR(250) NOT NULL,
  Traits VARCHAR(250) NOT NULL,
  Languages VARCHAR(250) NOT NULL,
  HitPoints INT NOT NULL,
  UserID BIGINT unsigned NOT NULL,
  RaceID BIGINT unsigned NOT NULL,
  BackgroundID BIGINT unsigned NOT NULL,
  ClassID BIGINT unsigned NOT NULL,
  CharacterID SERIAL PRIMARY KEY,
  FOREIGN KEY (UserID) REFERENCES USERS(UserID),
  FOREIGN KEY (RaceID) REFERENCES RACE(RaceID),
  FOREIGN KEY (BackgroundID) REFERENCES BACKGROUND(BackgroundID),
  FOREIGN KEY (ClassID) REFERENCES CLASS(ClassID)
);

CREATE TABLE SPELLS (
  SpellLevel VARCHAR(250) NOT NULL,
  SpellName VARCHAR(50) NOT NULL,
  SpellID SERIAL PRIMARY KEY
);

CREATE TABLE SKILLS (
  Acrobatics INT NOT NULL,
  AnimalHandling INT NOT NULL,
  Arcana INT NOT NULL,
  Athletics INT NOT NULL,
  Deception INT NOT NULL,
  History INT NOT NULL,
  Insight INT NOT NULL,
  Intimidation INT NOT NULL,
  Investigation INT NOT NULL,
  Medicine INT NOT NULL,
  Nature INT NOT NULL,
  Perception INT NOT NULL,
  Persuasion INT NOT NULL,
  Religion INT NOT NULL,
  SleightOfHand INT NOT NULL,
  Stealth INT NOT NULL,
  Survival INT NOT NULL,
  CharacterID SERIAL PRIMARY KEY,
  FOREIGN KEY (CharacterID) REFERENCES CHARACTERS(CharacterID)
);

CREATE TABLE ABILITYSCORE (
  Dexterity INT NOT NULL,
  Constitution INT NOT NULL,
  Strength INT NOT NULL,
  Intelligence INT NOT NULL,
  Wisdom INT NOT NULL,
  Charisma INT NOT NULL,
  CharacterID SERIAL PRIMARY KEY,
  FOREIGN KEY (CharacterID) REFERENCES CHARACTERS(CharacterID)
);

-- Creates table for m:m relationship between characters and actions
CREATE TABLE have (
  CharacterID BIGINT unsigned NOT NULL,
  SpellID BIGINT unsigned NOT NULL,
  PRIMARY KEY (CharacterID, SpellID),
  FOREIGN KEY (CharacterID) REFERENCES CHARACTERS(CharacterID),
  FOREIGN KEY (SpellID) REFERENCES SPELLS(SpellID)
);
